servers = (
{
  address = "irc.freenode.org";
  chatnet = "freenode";
  autoconnect = "yes";
}
);
<% print("Your nickname: "); STDOUT.flush; $nick = STDIN.gets.chomp %>
settings = {
  core = {
    nick = "<%= $nick %>";
    user_name = "<%= $nick %>";
    real_name = "<%= print("Your real name: "); STDOUT.flush; STDIN.gets.chomp %>";
    timestamp_format = "%H:%M:%S";
  };
  "fe-text" = { scrollback_time = "48h"; actlist_sort = "refnum"; };
  "fe-common/core" = {
    completion_char = ",";
    completion_nicks_lowercase = "yes";
    autocreate_query_level = "MSGS DCCMSGS";
    autofocus_new_items = "yes";
    autolog = "yes";
    autolog_level = "all -crap -clientcrap -ctcps";
    theme = "fear2";
    bell_beeps = "no";
    beep_msg_level = "MSGS NOTICES DCC DCCMSGS HILIGHT";
  };
};

chatnets = {
  freenode = {
    type = "IRC";
    autosendcmd = "/msg nickserv identify <%= print("Your freenode password: "); STDOUT.flush; STDIN.gets.chomp %>";
  };
};

channels = (
  { name = "#rubinius"; chatnet = "freenode"; autojoin = "yes"; },
  { name = "#codegram"; chatnet = "freenode"; autojoin = "yes"; password = "<%= print("Your #codegram password: "); STDOUT.flush; STDIN.gets.chomp %>"; }
);

hilights = (
  { text = "<%=$nick%>"; nick = "yes"; word = "yes"; }
);

# BOILERPLATE
statusbar = {
  # formats:
  # when using {templates}, the template is shown only if it's argument isn't
  # empty unless no argument is given. for example {sb} is printed always,
  # but {sb $T} is printed only if $T isn't empty.

  items = {
    # start/end text in statusbars
    barstart = "{sbstart}";
    barend = "{sbend}";

    topicbarstart = "{topicsbstart}";
    topicbarend = "{topicsbend}";

    # treated "normally", you could change the time/user name to whatever
    time = "{sb $Z}";
    user = "{sb $cumode$N{sbmode $usermode}{sbaway $A}}";

    # treated specially .. window is printed with non-empty windows,
    # window_empty is printed with empty windows
    window = "{sb $winref:$itemname{sbmode $M}}";
    window_empty = "{sb $winref{sbservertag $tag}}";
    prompt = "{prompt $[.15]itemname}";
    prompt_empty = "{prompt $winname}";
    topic = " $topic";
    topic_empty = " Irssi v$J - http://irssi.org/help/";

    # all of these treated specially, they're only displayed when needed
    lag = "{sb Lag: $0-}";
    act = "{sb Act: $0-}";
    more = "-- more --";
  };

  # there's two type of statusbars. root statusbars are either at the top
  # of the screen or at the bottom of the screen. window statusbars are at
  # the top/bottom of each split window in screen.
  default = {
    # the "default statusbar" to be displayed at the bottom of the window.
    # contains all the normal items.
    window = {
      disabled = "no";

      # window, root
      type = "window";
      # top, bottom
      placement = "bottom";
      # number
      position = "1";
      # active, inactive, always
      visible = "active";

      # list of items in statusbar in the display order
      items = {
        barstart = { priority = "100"; };
        time = { };
        user = { };
        window = { };
        window_empty = { };
        lag = { priority = "-1"; };
        act = { priority = "10"; };
        more = { priority = "-1"; alignment = "right"; };
        barend = { priority = "100"; alignment = "right"; };
      };
    };

    # statusbar to use in inactive split windows
    window_inact = {
      type = "window";
      placement = "bottom";
      position = "1";
      visible = "inactive";
      items = {
        barstart = { priority = "100"; };
        window = { };
        window_empty = { };
        more = { priority = "-1"; alignment = "right"; };
        barend = { priority = "100"; alignment = "right"; };
      };
    };

    # we treat input line as yet another statusbar :) It's possible to
    # add other items before or after the input line item.
    prompt = {
      type = "root";
      placement = "bottom";
      # we want to be at the bottom always
      position = "100";
      visible = "always";
      items = {
        prompt = { priority = "-1"; };
        prompt_empty = { priority = "-1"; };
        # treated specially, this is the real input line.
        input = { priority = "10"; };
      };
    };

    # topicbar
    topic = {
      type = "root";
      placement = "top";
      position = "1";
      visible = "always";
      items = {
        topicbarstart = { priority = "100"; };
        topic = { };
        topic_empty = { };
        topicbarend = { priority = "100"; alignment = "right"; };
      };
    };
  };
};


windows = {
  1 = { immortal = "yes"; name = "(status)"; level = "ALL"; };
  2 = {
    items = (
      {
        type = "CHANNEL";
        chat_type = "IRC";
        name = "#codegram";
        tag = "freenode";
      }
    );
  };
  3 = { name = "hilight"; sticky = "yes"; };
};
mainwindows = {
  2 = { first_line = "8"; lines = "37"; };
  3 = { first_line = "1"; lines = "7"; };
};
